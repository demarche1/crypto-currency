{"ast":null,"code":"var _jsxFileName = \"/home/alessandro/vscode/block-chain/src/components/CryptoSelect/index.jsx\",\n    _s = $RefreshSig$();\n\nimport styles from './CryptoSelect.module.css';\nimport { useState, useEffect } from 'react';\nimport { fetchCryptoName } from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CryptoSelect = () => {\n  _s();\n\n  const [coins, setCoins] = useState([]);\n  useEffect(() => {\n    const setCoinsNames = async () => {\n      setCoins(await fetchCryptoName());\n    };\n\n    setCoinsNames();\n  }, [setCoinsNames]);\n  console.log(coins);\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    children: /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CryptoSelect, \"lWPBf1AGqxEOa5MUwUz4imFFlpc=\");\n\n_c = CryptoSelect;\nexport default CryptoSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoSelect\");","map":{"version":3,"sources":["/home/alessandro/vscode/block-chain/src/components/CryptoSelect/index.jsx"],"names":["styles","useState","useEffect","fetchCryptoName","CryptoSelect","coins","setCoins","setCoinsNames","console","log"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAASC,eAAT,QAAgC,WAAhC;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMK,aAAa,GAAG,YAAW;AAC7BD,MAAAA,QAAQ,CAAE,MAAMH,eAAe,EAAvB,CAAR;AACH,KAFD;;AAGAI,IAAAA,aAAa;AAChB,GALQ,EAKN,CAACA,aAAD,CALM,CAAT;AAOAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAEA,sBACI;AAAA,2BACI;AAAQ,MAAA,KAAK,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAlBD;;GAAMD,Y;;KAAAA,Y;AAoBN,eAAeA,YAAf","sourcesContent":["import styles from './CryptoSelect.module.css'\nimport {useState, useEffect} from 'react';\nimport { fetchCryptoName } from '../../api';\n\nconst CryptoSelect = () => {\n    const [ coins, setCoins ] = useState([]);\n\n\n    useEffect(() => {\n        const setCoinsNames = async() => {\n            setCoins( await fetchCryptoName() )\n        }\n        setCoinsNames()\n    }, [setCoinsNames])\n\n    console.log(coins);\n\n    return (\n        <select>\n            <option value=\"\"></option>\n        </select>\n    )\n};\n\nexport default CryptoSelect"]},"metadata":{},"sourceType":"module"}