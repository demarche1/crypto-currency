{"ast":null,"code":"var _jsxFileName = \"/home/alessandro/vscode/block-chain/src/components/CryptoSelect/index.jsx\";\nimport styles from './CryptoSelect.module.css';\nimport { useState, useEffect } from 'react';\nimport { fetchCryptoName, fecthCryptoFromSelected } from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CryptoSelect = ({\n  setCryptoList,\n  cryptoList\n}) => {\n  // const [ coins, setCoins ] = useState([]);\n  // useEffect(() => {\n  //     const setCoinsNames = async() => {\n  //         setCoins(await fetchCryptoName())\n  //     }\n  //     setCoinsNames()\n  // }, [setCoins])\n  const setListDataFromSelectList = async coin => {\n    setCryptoList(await fecthCryptoFromSelected(coin));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    className: styles.select,\n    onChange: e => {\n      setListDataFromSelectList(e.target.value);\n    },\n    children: cryptoList.map((coin, index) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: coin.id,\n        children: coin.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_c = CryptoSelect;\nexport default CryptoSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoSelect\");","map":{"version":3,"sources":["/home/alessandro/vscode/block-chain/src/components/CryptoSelect/index.jsx"],"names":["styles","useState","useEffect","fetchCryptoName","fecthCryptoFromSelected","CryptoSelect","setCryptoList","cryptoList","setListDataFromSelectList","coin","select","e","target","value","map","index","id","name"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAASC,eAAT,EAA0BC,uBAA1B,QAAyD,WAAzD;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,aAAD;AAAgBC,EAAAA;AAAhB,CAAD,KAAiC;AAClD;AAGA;AACA;AACA;AACA;AACA;AACA;AAGA,QAAMC,yBAAyB,GAAG,MAAMC,IAAN,IAAe;AAC7CH,IAAAA,aAAa,CAAC,MAAMF,uBAAuB,CAACK,IAAD,CAA9B,CAAb;AACH,GAFD;;AAIA,sBACI;AAAQ,IAAA,SAAS,EAAET,MAAM,CAACU,MAA1B;AAAkC,IAAA,QAAQ,EAAGC,CAAD,IAAO;AAACH,MAAAA,yBAAyB,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAzB;AAA0C,KAA9F;AAAA,cACKN,UAAU,CAACO,GAAX,CAAe,CAACL,IAAD,EAAOM,KAAP,KAAiB;AAC7B,0BACI;AAAoB,QAAA,KAAK,EAAEN,IAAI,CAACO,EAAhC;AAAA,kBAAqCP,IAAI,CAACQ;AAA1C,SAAaF,KAAb;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAzBD;;KAAMV,Y;AA2BN,eAAeA,YAAf","sourcesContent":["import styles from './CryptoSelect.module.css'\nimport {useState, useEffect} from 'react';\nimport { fetchCryptoName, fecthCryptoFromSelected } from '../../api';\n\nconst CryptoSelect = ({setCryptoList, cryptoList}) => {\n    // const [ coins, setCoins ] = useState([]);\n\n\n    // useEffect(() => {\n    //     const setCoinsNames = async() => {\n    //         setCoins(await fetchCryptoName())\n    //     }\n    //     setCoinsNames()\n    // }, [setCoins])\n\n\n    const setListDataFromSelectList = async(coin) => {\n        setCryptoList(await fecthCryptoFromSelected(coin))\n    }\n\n    return (\n        <select className={styles.select} onChange={(e) => {setListDataFromSelectList(e.target.value)}}>\n            {cryptoList.map((coin, index) => {\n                return (\n                    <option key={index} value={coin.id}>{coin.name}</option>\n                )\n            })}\n        </select>\n    )\n};\n\nexport default CryptoSelect"]},"metadata":{},"sourceType":"module"}